# -*- mode: sh; -*-#

# wm independent hotkeys
#

# terminal emulator tiled or floating
super + { ,shift} + Return
    {$TERMINAL, bspc rule -a \* -o state=floating && $TERMINAL}      

# program launcher
super + space
    rofi -combi-modi window,drun -show combi -modi combi

# file search
super + shift + space
      rofi-files

# Essential software
super + e
      emacsclient -nc

super + f
      dired

# Emacs (not client)
super + shift + e
    emacs
# Doom emacs
super + ctrl + e
    emacs --with-profile doom

# System-wide org-capture and agenda at top-right of screen. Depends on emacs config.
super + c
    bspc rule -a Emacs -o state=floating rectangle=600x300+9999+35 & emacsclient -c -F '(quote (name . "capture"))' -e '(my--activate-capture-frame)'

super + a ; a
    bspc rule -a Emacs -o state=floating rectangle=1200x400+9999+35 & emacsclient -c -F '(quote (name . "agenda"))' -e '(org-agenda nil "t")'

# Other software
super + x ; b
      firefox

# Speedcrunch popup window for math
super + x ; s
    bspc rule -a SpeedCrunch -o state=floating rectangle=600x300+9999+35 & speedcrunch

# Reload sxhkd
super + shift + Escape
	pkill -USR1 -x sxhkd

# power
super + Escape ; {l,s}
      {slock,systemctl suspend}

###Volume
XF86AudioMute
    pulsemixer --toggle-mute
 
XF86Audio{Raise,Lower}Volume
    pulsemixer --change-volume {+,-}5

XF86AudioPlay
    playerctl play-pause

XF86Audio{Next,Prev}
    playerctl {next,previous}

# Screenshot
# maim -u -m 5 -s /tmp/maim_clipboard  && xclip -selection clipboard -t image/png /tmp/maim_clipboard && rm /tmp/maim_clipboard;
super + Print
    flameshot gui
 
# BRIGHTNESS
 
# Brightness goes up
XF86MonBrightnessUp
    light -A 5;
super + Up
    ddcutil setvcp 10 + 5

# Brightness goes down
XF86MonBrightnessDown
    light -U 5;
super + Down
    ddcutil setvcp 10 - 5

#
# bspwm hotkeys
#

# quit bspwm normally
super + alt + Escape
	bspc quit

# close and kill
super + {_,shift + }q
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# send the current focused node to the last preselection
super + p
    bspc node -n last.\!automatic -t tiled

# swap the current node and the biggest node
super + g
	bspc node -s biggest

# Rotate desktop
super + r
    bspc node @/ -R 90

#
# state/flags
#

# set the window state
super + {t,shift + t,s}
	bspc node -t {tiled,pseudo_tiled,floating}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction. Works with both bspwm-managed windows and emacs splits.
super + {h,j,k,l}
	seamless-move {west,south,north,east}

super + shift + {h,j,k,l}
	bspc node -s {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}


# cancel the preselection for the focused desktop
super + ctrl + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# Resize window using super + side button
super + button9
    SIZE=$(slop -f 0,%x,%y,%w,%h); bspc node focused -t floating; wmctrl -r :ACTIVE: -e "$SIZE" 

